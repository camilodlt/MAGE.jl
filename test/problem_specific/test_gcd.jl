using Primes

function divisors2(n)
    f = factor(n)
    m = prod(e + 1 for (p, e) in f)
    d = Vector{Int64}(undef, m)
    k = 1
    d[k] = 1
    for (p, e) in f
        r = 1
        l = k
        for i = 1:e
            r *= p
            for j = 1:l
                d[k+=1] = d[j] * r
            end
        end
    end
    return sort(d) # not strictly required
end

train_data = [
    [[1, 1], [1]],
    [[4, 400000], [4]],
    [[54, 24], [6]],
    [[4200, 3528], [168]],
    [[820000, 63550], [2050]],
    [[123456, 654321], [3]],
    [[936402, 632120], [2]],
    [[578217, 477830], [1]],
    [[462407, 578105], [11]],
    [[369090, 260755], [5]],
    [[521523, 420857], [1]],
    [[101742, 835463], [1]],
    [[750295, 489218], [1]],
    [[18965, 803313], [1]],
    [[262878, 982663], [6259]],
    [[890208, 475528], [8]],
    [[290432, 806646], [2]],
    [[322405, 568809], [1]],
    [[403885, 2864], [1]],
    [[462777, 772905], [21]],
    [[504035, 48114], [1]],
    [[945959, 743324], [1]],
    [[79233, 400441], [1]],
    [[627055, 501522], [1]],
    [[76082, 630597], [1]],
    [[371454, 304909], [1]],
    [[830967, 5908], [1]],
    [[612648, 177508], [4]],
    [[666910, 377580], [10]],
    [[100772, 751657], [1]],
    [[321809, 648745], [1]],
    [[477355, 954210], [5]],
    [[728288, 892656], [16]],
    [[918990, 994162], [2]],
    [[828243, 391455], [9]],
    [[614492, 389324], [4]],
    [[187435, 838873], [1]],
    [[753371, 19798], [1]],
    [[210560, 807425], [5]],
    [[332970, 116888], [2]],
    [[943366, 885152], [2]],
    [[98793, 77829], [3]],
    [[675388, 532863], [1]],
    [[136001, 198940], [1]],
    [[59976, 382301], [1]],
    [[263051, 135692], [1]],
    [[973809, 868042], [1]],
    [[606195, 346734], [9]],
    [[350310, 766809], [3]],
    [[290334, 1217], [1]],
]
function algo_divisors(x, y)

    int_1 = x[1]
    int_2 = x[2]

    # divisors
    divisors_1 = divisors2(int_1)
    divisors_2 = divisors2(int_2)

    # intersect
    divisors_1 = Set(divisors_1)
    divisors_2 = Set(divisors_2)
    pred = intersect(divisors_1, divisors_2)
    pred = collect(pred)
    pred = max(pred)
    return pred == y
end
