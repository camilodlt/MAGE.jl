---
engine: julia
---

# hasmethod {#sec-doc}
    

::: {.callout-note appearance="simple" title="docblock" collapse=false}    


```{julia}
#| eval: false
hasmethod(f, t::Type{<:Tuple}[, kwnames]; world=get_world_counter()) -> Bool

```

Determine whether the given generic function has a method matching the given `Tuple` of argument types with the upper bound of world age given by `world`.
 
If a tuple of keyword argument names `kwnames` is provided, this also checks whether the method of `f` matching `t` has the given keyword argument names. If the matching method accepts a variable number of keyword arguments, e.g. with `kwargs...`, any names given in `kwnames` are considered valid. Otherwise the provided names must be a subset of the method's keyword arguments.
 
See also [`applicable`](@ref).
 
::: {.callout-warning title="compat: Julia 1.2"}

Providing keyword argument names requires Julia 1.2 or later.


:::


### Examples
    

```{julia}
#| eval: false
julia> hasmethod(length, Tuple{Array})
true

julia> f(; oranges=0) = oranges;

julia> hasmethod(f, Tuple{}, (:oranges,))
true

julia> hasmethod(f, Tuple{}, (:apples, :bananas))
false

julia> g(; xs...) = 4;

julia> hasmethod(g, Tuple{}, (:a, :b, :c, :d))  # g accepts arbitrary kwargs
true

```



:::
    

 --- 
 
::: {.callout-note appearance="simple" title="docblock" collapse=false}    

types: (Int, Int) for example
 


:::
    

