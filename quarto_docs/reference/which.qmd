---
engine: julia
---

# which {#sec-doc}
    

::: {.callout-note appearance="simple" title="docblock" collapse=false}    


```{julia}
#| eval: false
which(f, types)

```

Returns the method of `f` (a `Method` object) that would be called for arguments of the given `types`.
 
If `types` is an abstract type, then the method that would be called by `invoke` is returned.
 
See also: [`parentmodule`](@ref), and `@which` and `@edit` in [`InteractiveUtils`](@ref man-interactive-utils).
 


:::
    

 --- 
 
::: {.callout-note appearance="simple" title="docblock" collapse=false}    


```{julia}
#| eval: false
which(types::Type{<:Tuple})

```

Returns the method that would be called by the given type signature (as a tuple type).
 


:::
    

 --- 
 
::: {.callout-note appearance="simple" title="docblock" collapse=false}    


```{julia}
#| eval: false
which(module, symbol)

```

Return the module in which the binding for the variable referenced by `symbol` in `module` was created.
 


:::
    

 --- 
 
::: {.callout-note appearance="simple" title="docblock" collapse=false}    

types: (Int, Int) for example
 


:::
    

