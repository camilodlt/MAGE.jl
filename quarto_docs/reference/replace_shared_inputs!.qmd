---
engine: julia
---

# replace_shared_inputs! {#sec-doc}
    

::: {.callout-note appearance="simple" title="docblock" collapse=false}    

From a SharedInput obj, it replaces the inputs while keeping the same object.  The new inputs must have the same size as the SharedInput
 


:::
    

 --- 
 
::: {.callout-note appearance="simple" title="docblock" collapse=false}    

From a SharedInput obj, it replaces the inputs while keeping the same object.  The `new_inputs` replace the values of the old inputs. 
 


:::
    

 --- 
 
::: {.callout-note appearance="simple" title="docblock" collapse=false}    


```{julia}
#| eval: false
replace_shared_inputs!(program::Program, new_inputs::Vector{InputNode})

```

Replaces the inputs from a program with the new*inputs. This op mutates the `program*inputs` property inplace so that the reference is kept in the decoded program.
 


:::
    

 --- 
 
::: {.callout-note appearance="simple" title="docblock" collapse=false}    


```{julia}
#| eval: false
replace_shared_inputs!(program::Program, new_inputs::Vector{A}) where {A}

```

Replaces the inputs inside the program. 
 
From the SharedInput obj inside the program, it replaces the inputs while keeping the same object.  The `new_inputs` replace the values of the old inputs. 
 


:::
    

 --- 
 
::: {.callout-note appearance="simple" title="docblock" collapse=false}    


```{julia}
#| eval: false
replace_shared_inputs!(programs::IndividualPrograms, new_inputs::Vector{InputNode})

```

Replaces the inputs in all programs.
 


:::
    

 --- 
 
::: {.callout-note appearance="simple" title="docblock" collapse=false}    


```{julia}
#| eval: false
replace_shared_inputs!(programs::IndividualPrograms, new_inputs::Vector{A}) where{A}

```

Replaces the inputs in all programs.
 


:::
    

 --- 
 
::: {.callout-note appearance="simple" title="docblock" collapse=false}    


```{julia}
#| eval: false
replace_shared_inputs!(pop_programs::PopulationPrograms, new_inputs::Vector{InputNode})

```

Replaces the inputs in all programs.
 


:::
    

